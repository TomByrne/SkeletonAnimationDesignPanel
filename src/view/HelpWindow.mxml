<?xml version="1.0" encoding="utf-8"?>
<s:SkinnableContainer xmlns:fx="http://ns.adobe.com/mxml/2009"
					  xmlns:s="library://ns.adobe.com/flex/spark"
					  xmlns:mx="library://ns.adobe.com/flex/mx"
					  xmlns:components="view.components.*"
					  xmlns:view="view.*"
					  width="100%" height="100%" backgroundAlpha="0.5" backgroundColor="#CCCCCC"
					  creationComplete="this_creationCompleteHandler(event)"
					  show="showHandler(event)">
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import cloud.DBCloud;
			import cloud.GA.DBGATrackerManager;
			import cloud.events.DBCloudEvent;
			
			import dragonBones.core.DragonBones;
			import dragonBones.utils.ConstValues;
			
			import model.SettingDataProxy;
			
			import mx.controls.Alert;
			import mx.events.FlexEvent;
			import mx.validators.EmailValidator;
			
			[Bindable]
			private var _onlineHelp:String = "";
			
			[Bindable]
			private var _about:String = "";
			
			[Bindable]
			private var _helpUs:String = "";
			
			protected function this_creationCompleteHandler(event:FlexEvent):void
			{
				DBCloud.instance.addEventListener(DBCloudEvent.LOAD_ONLINEHELP_SUCCESS, cloud_onLoadOnlineHelpSuccess);
				DBCloud.instance.addEventListener(DBCloudEvent.LOAD_ABOUT_SUCCESS, cloud_onLoadAboutSuccess);
				DBCloud.instance.addEventListener(DBCloudEvent.LOAD_HELPUS_SUCCESS, cloud_onLoadHelpUsSuccess);
				DBCloud.instance.loadOnlineHelp();
				DBCloud.instance.loadAbout();
				DBCloud.instance.loadHelpUs();
			}
			
			private function cloud_onLoadOnlineHelpSuccess(event:DBCloudEvent):void
			{
				DBCloud.instance.removeEventListener(DBCloudEvent.LOAD_ONLINEHELP_SUCCESS, cloud_onLoadOnlineHelpSuccess);
				_onlineHelp = String(event.data.outputData);
			}
			
			private function cloud_onLoadAboutSuccess(event:DBCloudEvent):void
			{
				DBCloud.instance.removeEventListener(DBCloudEvent.LOAD_ABOUT_SUCCESS, cloud_onLoadAboutSuccess);
				_about = String(event.data.outputData);
			}
			
			private function cloud_onLoadHelpUsSuccess(event:DBCloudEvent):void
			{
				DBCloud.instance.removeEventListener(DBCloudEvent.LOAD_ABOUT_SUCCESS, cloud_onLoadHelpUsSuccess);
				_helpUs = String(event.data.outputData);
			}
			
			private function showHandler(event:Event):void
			{
				if(_onlineHelp == "")
				{
					DBCloud.instance.loadOnlineHelp();
				}
				if(_about == "")
				{
					DBCloud.instance.loadAbout();
				}
				if(_helpUs == "")
				{
					DBCloud.instance.loadHelpUs();
				}
			}
			
			private function closeHandler(event:Event):void
			{
				this.visible = false;
				DBGATrackerManager.trackEvent("AboutWindow:Close", "AboutWindow:Close");
				DBGATrackerManager.trackPageview("/");
			}
			
			protected function contactUsBtn_onClick(event:MouseEvent):void
			{
				DBGATrackerManager.trackEvent("AboutWindow:ClickContactUs", "AboutWindow:ClickContactUs");
				navigateToURL(new URLRequest("http://dragonbones.github.io/contact_us.html"));
			}
			
			protected function copyright_clickHandler(event:MouseEvent):void
			{
				DBGATrackerManager.trackEvent("AboutWindow:ClickCopyright", "AboutWindow:ClickCopyright");
				navigateToURL(new URLRequest("http://dragonbones.github.io/about_us.html"));
			}
			
			protected function contactUs_creationComplete(event:FlexEvent):void
			{
				resetContectUs();
			}
			
			protected function submitBtn_clickHandler(event:MouseEvent):void
			{
				var result:Array = Validator.validateAll([nameValid, messageValid, emialValid]);
				if(result.length != 0)
				{
					return;
				}
				SettingDataProxy.getInstance().userName = nameText.text;
				SettingDataProxy.getInstance().userEmail = emailText.text;
				
				DBCloud.instance.addEventListener(DBCloudEvent.CONTACT_US_SUCCESS, onContactUsSuccess);
				DBCloud.instance.addEventListener(DBCloudEvent.CONTACT_US_FAILED, onContactUsFailed);
				DBCloud.instance.cotactUs({name: nameText.text, email: emailText.text, message: messageText.text});
			}
			
			private function onContactUsSuccess(event:DBCloudEvent):void
			{
				DBCloud.instance.removeEventListener(DBCloudEvent.CONTACT_US_SUCCESS, onContactUsSuccess);
				DBCloud.instance.removeEventListener(DBCloudEvent.CONTACT_US_FAILED, onContactUsFailed);
				Alert.show("Your message has been send successfully.");
			}
			
			private function onContactUsFailed(event:DBCloudEvent):void
			{
				DBCloud.instance.removeEventListener(DBCloudEvent.CONTACT_US_SUCCESS, onContactUsSuccess);
				DBCloud.instance.removeEventListener(DBCloudEvent.CONTACT_US_FAILED, onContactUsFailed);
				Alert.show("Failed to send message. Please check your network and try later");
			}
			
			protected function resetBtn_clickHandler(event:MouseEvent):void
			{
				resetContectUs();
			}
			
			private function resetContectUs():void
			{
				nameText.text = SettingDataProxy.getInstance().userName;
				emailText.text = SettingDataProxy.getInstance().userEmail;
				messageText.text = "";
			}
		]]>
	</fx:Script>
	<fx:Declarations>
		<mx:Validator id="nameValid" required="true" source="{nameText}" property="text"/>
		<mx:Validator id="messageValid" required="true" source="{messageText}" property="text"/>
		<mx:EmailValidator id="emialValid" source="{emailText}" property="text" />
	</fx:Declarations>
	<s:TitleWindow left="20" right="20" top="20" bottom="20" title="{resourceManager.getString('resources','help')}" 
				   close="closeHandler(event)">
		<s:TabBar id="tabs" width="100%" dataProvider="{vs}"/>
		<mx:ViewStack id="vs" width="100%" height="100%" top="24">
			<s:NavigatorContent label="{resourceManager.getString('resources', 'onlineHelp')}" width="100%" height="100%">
				<mx:TextArea left="5" right="5" top="5" bottom="5" borderVisible="false"
							 contentBackgroundAlpha="0.0" editable="false" fontSize="14"
							 htmlText="{_onlineHelp}"/>
			</s:NavigatorContent>
			<s:NavigatorContent label="{resourceManager.getString('resources', 'contactUs')}" width="100%" height="100%" fontSize="14">
				<s:Scroller left="5" right="5" top="5" bottom="5" 
							creationComplete="contactUs_creationComplete(event)">
					<s:VGroup gap="0">
						<s:Label width="100%" 
								 text="Welcome anyone to send us message here! (bug reports, questions, sugestions, etc..)"/>
						<s:Form defaultButton="{submitBtn}">
							<s:FormItem label="Your Name:" required="true">
								<s:TextInput id="nameText" width="180" maxChars="64"/>
							</s:FormItem>
							<s:FormItem label="Your Email:" required="true">
								<s:TextInput id="emailText" width="180"/>
							</s:FormItem>
							<s:FormItem label="Message:" required="true">
								<s:TextArea id="messageText" width="180" height="150"/>
							</s:FormItem>
							<s:FormItem>
								<s:HGroup gap="40">
									<s:Button id="submitBtn" label="Submit" click="submitBtn_clickHandler(event)"/>
									<s:Button id="resetBtn" label="Reset" click="resetBtn_clickHandler(event)"/>
								</s:HGroup>
							</s:FormItem>
						</s:Form>
					</s:VGroup>
				</s:Scroller>
			</s:NavigatorContent>
			<s:NavigatorContent label="{resourceManager.getString('resources', 'about')}" width="100%" height="100%">
				<s:VGroup left="10" right="10" top="10" bottom="10" >
					<s:Label width="100%" fontSize="14" fontWeight="bold" textAlign="center"
								 text="DragonBones V{DragonBones.VERSION} ({DragonBones.VERSION_NUMBER})"/>
					<s:Line width="100%">
						<s:stroke>
							<s:SolidColorStroke color="0x000000" weight="1" caps="square"/>
						</s:stroke>
					</s:Line>
					<mx:TextArea id="aboutText" width="100%" height="100%" fontSize="14"
								 contentBackgroundAlpha="0.0" borderVisible="false" editable="false"
								 htmlText="{_about}" />
					<s:Line width="100%">
						<s:stroke>
							<s:SolidColorStroke color="0x000000" weight="1" caps="square"/>
						</s:stroke>
					</s:Line>
					<s:Label width="100%" fontSize="14" fontWeight="bold" textAlign="center"
							 buttonMode="true" useHandCursor="true" click="copyright_clickHandler(event)"
								 text="{resourceManager.getString('resources', 'copyright')}" />
				</s:VGroup>
			</s:NavigatorContent>
			<s:NavigatorContent label="{resourceManager.getString('resources', 'helpUs')}" width="100%" height="100%">
				<mx:TextArea left="5" right="5" top="5" bottom="5" editable="false"
							 contentBackgroundAlpha="0.0"  borderVisible="false" fontSize="14"
							 htmlText="{_helpUs}"/>
				
			</s:NavigatorContent>
		</mx:ViewStack>
	</s:TitleWindow>
</s:SkinnableContainer>
